{"version":3,"sources":["custom-components/models/DisputeModal/index.js","custom-components/models/WalkInUser/index.js","custom-components/SweatAlert/index.js","hooks/useOpenClose.js","components/ChargeBox/index.js","pages/Chargebox/index.js"],"names":["DisputeModal","isOpen","Toggle","useState","email","message","form","setForm","onChangeHandler","e","target","name","value","Modal","zIndex","centered","ModalHeader","ModalBody","Row","Col","md","FormGroup","Label","Input","type","placeholder","onChange","ModalFooter","Button","onClick","className","WalkInUser","handleModal","dispatch","useDispatch","history","useHistory","id","useParams","rateError","setRateError","errorMinutes","setErrorMinutes","isLoading","setIsLoading","profile","min","hour","submitHandler","a","Toaster","user","getLocalStorage","chargingInfo","setLocalStorage","Actions","moment","toISOString","split","add","Type","show","showMon","select","console","log","push","disabled","data-size","XL","loading","SweatAlert","title","close","submitbutton","cancel","sweatSubmit","toggle","icon","color","useOpenClose","d","open","setOpen","onOpen","onClose","onToggle","Text","styled","p","TextColor","div","CardParagraph","H5","h5","Heading","props","localUser","search","useLocation","qs","parse","reservationType","reserveStartTime","reserveDate","reservation_pk","p_transaction_id","credit","intent_id","debit","reserveExpiryTime","est_KW","localStoreUser","setLocalStoreUser","topLoading","setTopLoading","agreed","setAgreed","waiverDialogue","setWaiverDialogue","checked","setChecked","connector_id_by_count","setConnector_id_by_count","useSelector","state","pgUser","appReducer","checkTransactionReqStatus","checkTransactionStatus","headerDrawerToggle","ThemeOptions","singleBox","model","stepper","trigger","triggerLocalStorage","chargeBoxUser","selectedConnector","sidebarToggleMobile","mainLoading","chargeBoxConnector","params","useEffect","TYPE","payload","runAction","setIsOpen","userLocal","startTransaction","format","enableTryAgain","openFeedback","handle","setInterval","checkStatusStop","stopTransaction","obj","chargebox_id","chargeboxid","user_id","guest","results","idtag_fk","connector_id","res","Success","Error","undefined","fetchResponse","isPOS","swal","buttons","text","visible","closeModal","confirm","then","setFeedback","catch","transaction","charge_id","API","amount","parseInt","data","charge_amount","response","amount_to_capture","version","created_date","updated_date","created_by","lastmodified_by","status","parseFloat","amount_captured","transaction_type","receipt_number","receipt_url","charges","wallet_fk","wallet_id","reservation_status","RESERVATION_STATUS","Completed","handleToggleFeedback","window","cancelObj","reason","connectorId_fk","length","connectorId_pk","clearInterval","remoteStartFunc","map","indexOf","_userLocal","registerOpen","setRegisterOpen","notavailable","setNotavailable","files","selected","setSelected","feedback","HanlderRegisterModal","satisfaction","recommend","gender","age_group","feedback_content","location","feedbackform","setFeedbackform","buffer","forEach","file","URL","revokeObjectURL","preview","latAndLong","is_occupied","applicable_pp","est_kw","Number","reservation_id","est_mins","diff","chargeObj","estimated_vals","total_killowatt","setHeaderDrawerToggle","remoteStopTransaction","refundResponse","Container","style","textAlign","replace","toUpperCase","size","xs","fontSize","city","endpoint_address","highlightColor","width","height","Card","fluid","RadioGroup","aria-label","flexDirection","event","c","index","xl","lg","sm","src","connectorImage","alt","connectorTypeName","filter","cId","FormControlLabel","control","Radio","profilename","rates","profilepriceunit","profilepricetype","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","borderTop","borderBottom","DialogContentText","FormControl","component","param","FormLabel","row","defaultValue","label","Typography","gutterBottom","Slider","v","valueLabelDisplay","step","marks","max","TextareaAutosize","border","content","minRows","maxRows","DialogActions","preventDefault","idtag","justifyContent","Checkbox","autoFocus","ChargeBox"],"mappings":"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","file":"static/js/7.0fdde994.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  Label,\n  Row,\n  Col,\n  Input\n} from 'reactstrap';\n\nconst DisputeModal = ({ isOpen, Toggle }) => {\n  const [form, setForm] = useState({\n    email: '',\n    message: ''\n  });\n  const onChangeHandler = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const { email, message } = form;\n  return (\n    <Modal zIndex={2000} centered isOpen={isOpen}>\n      <ModalHeader>Raise Dispute</ModalHeader>\n      <ModalBody>\n        <Row>\n          <Col md={12}>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Enter Your Email\"\n                onChange={onChangeHandler}\n              />\n            </FormGroup>\n          </Col>\n          <Col md={12}>\n            <FormGroup>\n              <Label>Dispute Message</Label>\n              <Input\n                type=\"textarea\"\n                name=\"message\"\n                value={message}\n                placeholder=\"Enter Your Message\"\n                onChange={onChangeHandler}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={Toggle}\n          className=\" btn btn-secondary font-weight-bold w-20 \">\n          Cancel\n        </Button>\n        <Button\n          onClick={Toggle}\n          className=\" btn btn-primary font-weight-bold w-20 \">\n          Submit\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default DisputeModal;\n","import * as Actions from 'Actions';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport LaddaButton, { XL } from 'react-ladda';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { Button, Modal, ModalFooter } from 'reactstrap';\nimport { getLocalStorage, setLocalStorage, Toaster } from 'utils';\nimport Type from '../Stepper/components/Type';\n\nconst WalkInUser = ({ isOpen, handleModal, form, setForm }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { id } = useParams();\n  const [rateError, setRateError] = useState(false);\n  const [errorMinutes, setErrorMinutes] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { type, profile, hour, min } = form;\n  const onChangeHandler = (e, select) => {\n    console.log(e);\n    if (select === 'type') {\n      setForm({\n        ...form,\n        type: e\n      });\n    } else if (select === 'pfType') {\n      setForm({\n        ...form,\n        profile: e\n      });\n    } else {\n      if (e.target.name === 'hour') {\n        if (e.target.value < 10) {\n          setRateError(true);\n        } else {\n          setRateError(false);\n        }\n        setForm({\n          ...form,\n          [e.target.name]: e.target.value\n        });\n      } else if (e.target.name === 'min') {\n        if (e.target.value < 60) {\n          setErrorMinutes(true);\n        } else {\n          setErrorMinutes(false);\n        }\n        setForm({\n          ...form,\n          [e.target.name]: e.target.value\n        });\n      } else {\n        setForm({\n          ...form,\n          [e.target.name]: e.target.value\n        });\n      }\n    }\n  };\n  const submitHandler = async () => {\n    if (!profile) {\n      Toaster('info', 'Please Select Profile First');\n      return;\n    }\n    setIsLoading(true);\n    const user = getLocalStorage('evapUser', true, true);\n    if (user) {\n      user.chargingInfo = { ...form };\n      setLocalStorage('evapUser', user);\n    }\n    if (profile?.value === 'profilePKW') {\n      await dispatch(\n        await Actions.getsingleChargeBox(\n          id,\n          form,\n          `${moment().toISOString().split('T')[0]} ${\n            moment().toISOString().split('T')[1].split('.')[0]\n          }`\n        )\n      );\n      setIsLoading(false);\n    } else {\n      await dispatch(\n        await Actions.getsingleChargeBox(\n          id,\n          form,\n          `${moment().toISOString().split('T')[0]} ${\n            moment().toISOString().split('T')[1].split('.')[0]\n          }`,\n          `${moment().add(min, 'minutes').toISOString().split('T')[0]} ${\n            moment().toISOString().split('T')[1].split('.')[0]\n          }`\n        )\n      );\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Modal zIndex={2000} centered isOpen={isOpen}>\n      <Type\n        rateError={rateError}\n        errorMinutes={errorMinutes}\n        show={true}\n        showMon={true}\n        form={form}\n        onChangeHandler={onChangeHandler}\n      />\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            history.push('/');\n          }}\n          disabled={isLoading}\n          className=\" btn btn-primary font-weight-bold w-20 \">\n          Go Back to Map\n        </Button>\n        <LaddaButton\n          data-size={XL}\n          disabled={rateError || errorMinutes}\n          loading={isLoading}\n          onClick={submitHandler}\n          className=\" btn btn-primary font-weight-bold w-50\">\n          Get ChargBox Info\n        </LaddaButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default WalkInUser;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport LaddaButton, { XL } from 'react-ladda';\nimport { useDispatch } from 'react-redux';\nimport { Button, Modal } from 'reactstrap';\n\nconst SweatAlert = ({\n  show,\n  title,\n  message,\n  type,\n  close,\n  submitbutton,\n  cancel,\n  sweatSubmit,\n  isLoading\n}) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Modal zIndex={2000} centered isOpen={show} toggle={close}>\n        <div className=\"text-center p-5\">\n          <div className=\"avatar-icon-wrapper rounded-circle m-0\">\n            <div className=\"d-inline-flex justify-content-center p-0 rounded-circle avatar-icon-wrapper bg-neutral-first text-first m-0 d-130\">\n              <FontAwesomeIcon\n                icon={['far', 'keyboard']}\n                className=\"d-flex align-self-center display-3\"\n              />\n            </div>\n          </div>\n          <h4 className=\"font-weight-bold mt-4\">{title}</h4>\n          <p className=\"mb-0 text-black-50\">{message}</p>\n          <div className=\"pt-4\">\n            <Button\n              onClick={close}\n              color=\"neutral-secondary\"\n              className=\"btn-pill text-danger mx-1\">\n              <span className=\"btn-wrapper--label\">{cancel}</span>\n            </Button>\n            <LaddaButton\n              data-size={XL}\n              loading={isLoading}\n              onClick={sweatSubmit}\n              className=\" btn btn-primary font-weight-bold w-50\">\n              <span className=\"btn-wrapper--label\">{submitbutton}</span>\n            </LaddaButton>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default SweatAlert;\n","import { useState } from 'react';\n\nconst useOpenClose = (d = false) => {\n  const [open, setOpen] = useState(d);\n\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(false);\n  const onToggle = () => setOpen(!open);\n  return [open, onOpen, onClose, onToggle];\n};\n\nexport default useOpenClose;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as Actions from 'Actions';\nimport * as TYPE from 'Actions/type';\nimport * as API from 'api';\nimport DisputeModal from 'custom-components/models/DisputeModal';\nimport WalkInUser from 'custom-components/models/WalkInUser';\nimport SweatAlert from 'custom-components/SweatAlert';\nimport { RESERVATION_STATUS } from 'enums';\nimport useOpenClose from 'hooks/useOpenClose';\nimport moment from 'moment';\nimport qs from 'querystringify';\nimport React, { useEffect, useState } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { ClimbingBoxLoader } from 'react-spinners';\nimport { Badge, Button, Card, Col, Container, Progress, Row } from 'reactstrap';\nimport { setHeaderDrawerToggle } from 'reducers/ThemeOptions';\nimport styled from 'styled-components';\nimport swal from 'sweetalert';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport LaddaButton, { XL } from 'react-ladda';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport PinDropIcon from '@material-ui/icons/PinDrop';\nimport {\n  LeaveCommentIcon,\n  SuccessfullChargingIcon,\n  CouldNotChargeIcon,\n  ChatIcon,\n  BatteryIcon\n} from 'assets/svgs';\nimport './style.scss';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { getLocalStorage, Toaster } from 'utils';\nconst Text = styled.p`\n  font-size: 13x;\n  margin: 10px 0px 0px 0px;\n`;\n\nconst TextColor = styled.div`\n  color: black;\n`;\n\nconst CardParagraph = styled.p`\n  font-size: 15px;\n  margin-bottom: 0;\n`;\n\nconst H5 = styled.h5`\n  font-weight: bold;\n`;\n\nconst Heading = styled.p`\n  font-weight: bold;\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nfunction LivePreviewExample(props) {\n  const localUser = getLocalStorage('evapUser', true, true);\n  const { className } = props;\n  const { search } = useLocation();\n  const history = useHistory();\n  const [open, onOpen, onToggle] = useOpenClose();\n  const {\n    reservationType,\n    reserveStartTime,\n    reserveDate,\n    reservation_pk,\n    p_transaction_id,\n    credit,\n    debit,\n    intent_id,\n    reserveExpiryTime,\n    est_KW\n  } = qs.parse(search);\n  const [localStoreUser, setLocalStoreUser] = useState(null);\n  const [topLoading, setTopLoading] = useState(false);\n  const [statusColor, setStatusColor] = useState('success');\n  const [agreed, setAgreed] = useState(false);\n  const [waiverDialogue, setWaiverDialogue] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [connector_id_by_count, setConnector_id_by_count] = useState(1);\n  // const [selectedConnector, setSelectedConnector] = React.useState('');\n  const {\n    mainLoading,\n    chargeBoxConnector,\n    singleBox,\n    pgUser,\n    headerDrawerToggle,\n    chargeBoxUser,\n    triggerLocalStorage,\n    checkTransactionReqStatus,\n    selectedConnector\n  } = useSelector((state) => ({\n    pgUser: state.appReducer.pgUser,\n    checkTransactionReqStatus: state.appReducer.checkTransactionStatus,\n    headerDrawerToggle: state.ThemeOptions.headerDrawerToggle,\n    singleBox: state.appReducer.singleBox,\n    singleBox: state.appReducer.singleBox,\n    stepper: state.model.stepper,\n    triggerLocalStorage: state.trigger.triggerLocalStorage,\n    chargeBoxUser: state.appReducer.chargeBoxUser,\n    selectedConnector: state.appReducer.selectedConnector,\n    sidebarToggleMobile: state.ThemeOptions.sidebarToggleMobile\n  }));\n  \n  const dispatch = useDispatch();\n  const params = useParams();\n  \n  \n  useEffect(() => {\n    dispatch({ type: TYPE.CHECK_STATUS, payload: null });\n    dispatch(\n      Actions.getChargeBoxUserByEmail(`guest-${params?.id}@evap.my`, history)\n    );\n\n    dispatch(Actions.stepper(false));\n    dispatch(Actions.removeChargeBoxInfo());\n\n    if (reservationType) {\n      const runAction = async () => {\n        setTopLoading(true);\n        await dispatch(\n          await Actions.getsingleChargeBox(\n            params?.id,\n            {\n              profile: {\n                value: reservationType\n              },\n              hour: est_KW\n            },\n            `${reserveDate} ${reserveStartTime}`,\n            `${reserveDate} ${reserveExpiryTime}`\n          )\n        );\n        setTopLoading(false);\n      };\n      runAction();\n    }\n\n    setIsOpen(true);\n    // singleBox?.connectorId_fk?.length ==1 && selectedConnector === ''? setSelectedConnector(singleBox.connectorId_fk[0].connectorId_pk): ''\n\n  }, []);\n  useEffect(() => {\n    const userLocal = getLocalStorage('evapUser', true, true);\n    if (userLocal?.startTransaction && !reservationType) {\n      const runAction = async () => {\n        const { chargingInfo } = userLocal;\n        setTopLoading(true);\n        if (chargingInfo?.profile?.value === 'profilePKW') {\n          await dispatch(\n            await Actions.getsingleChargeBox(\n              params?.id,\n              chargingInfo,\n              moment().format('YYYY-MM-DD HH:mm:ss')\n            )\n          );\n          setTopLoading(false);\n        } else {\n          await dispatch(\n            await Actions.getsingleChargeBox(\n              params?.id,\n              chargingInfo,\n              moment().format('YYYY-MM-DD HH:mm:ss'),\n              moment()\n                .add(chargingInfo?.min, 'minutes')\n                .format('YYYY-MM-DD HH:mm:ss')\n            )\n          );\n          setTopLoading(false);\n        }\n      };\n      runAction();\n    }\n  }, []);\n  useEffect(() => {\n    if (localStoreUser?.enableTryAgain) {\n      openFeedback();\n    }\n  }, [localStoreUser]);\n  useEffect(() => {\n    //     setFeedbackform({ ...feedbackform,\n    //       location: singleBox?.chargeboxid,\n    //       user: chargeBoxUser?.results?.[0]?.user?.idtag\n    //     });\n\n    var handle = setInterval(async () => {\n      const userLocal = getLocalStorage('evapUser', true, true);\n      if (\n        userLocal?.startTransaction &&\n        !userLocal.checkStatusStop &&\n        !userLocal?.stopTransaction &&\n        !userLocal?.enableTryAgain &&\n        (chargeBoxUser || pgUser) &&\n        singleBox\n      ) {\n        console.log(connector_id_by_count);\n        let obj = {\n          chargebox_id: singleBox?.chargeboxid,\n          user_id: localUser?.guest\n            ? chargeBoxUser?.results?.[0]?.idtag_fk\n            : pgUser?.idtag_fk,\n          connector_id: connector_id_by_count\n        };\n        if(connector_id_by_count!==0) {\n          const res = await dispatch(\n            await Actions.checkTransactionStatus({ ...obj }, !triggerLocalStorage)\n          );\n          dispatch(Actions.LocalStorageTrigger(!triggerLocalStorage));\n        if (res?.Success) {\n          if (\n            !checkTransactionReqStatus ||\n            checkTransactionReqStatus !== res?.Success\n          ) {\n            dispatch({ type: TYPE.CHECK_STATUS, payload: res?.Success });\n            Toaster('success', res?.Success);\n          }\n        } else {\n          if (\n            !checkTransactionReqStatus ||\n            checkTransactionReqStatus !== res?.Error\n          ) {\n            dispatch({ type: TYPE.CHECK_STATUS, payload: res?.Error });\n            Toaster('error', res?.Error);\n          }\n        }\n        if (res?.Success === 'Transaction Completed') {\n          dispatch(Actions.LocalStorageTrigger(!triggerLocalStorage));\n          // setTimeout(async () => {\n          // connector_id_by_count =  singleBox?.connectorId_fk.map((e) => {\n          //   return e.connectorId_pk\n          // }).indexOf(selectedConnector) +1;\n          if(connector_id_by_count!==0 && connector_id_by_count !=undefined ){\n            const fetchResponse = await dispatch(\n              await Actions.remoteFetchTransaction(\n                { chargebox_id: singleBox.chargeboxid, connector_id: connector_id_by_count },\n                !triggerLocalStorage\n              )\n            );\n            if (fetchResponse?.Success === 'Transaction data') {\n              if (singleBox?.isPOS) {\n                swal('Transaction Successful', 'Please Click Confrim Button', {\n                  buttons: {\n                    cancel: {\n                      text: 'Download Transaction Receipt',\n                      value: null,\n                      visible: false,\n                      className: '',\n                      closeModal: false\n                    },\n                    confirm: {\n                      text: 'Confrim',\n                      value: true,\n                      visible: true,\n                      className: '',\n                      closeModal: true\n                    }\n                  },\n                  icon: 'success'\n                })\n                  .then((value) => {\n                    setFeedback(true);\n                  })\n                  .catch((e) => {});\n                return;\n              }\n  \n              const user = getLocalStorage('evapUser', true, true);\n              let response;\n              if (user?.transaction?.charge_id) {\n                response = await API.post(`/payments/customer-charge/`, {\n                  charge_id: user?.transaction?.charge_id,\n                  amount: parseInt(fetchResponse?.data?.charge_amount),\n                  email: user?.email\n                });\n              } else {\n                response = await API.post(`/payments/payment-capture/`, {\n                  intent_id: user.transaction.intent_id,\n                  amount_to_capture: parseInt(fetchResponse?.data?.charge_amount)\n                });\n              }\n              const obj = {\n                version: '1',\n                created_date: moment().toISOString(),\n                updated_date: moment().toISOString(),\n                created_by: 'Usman',\n                lastmodified_by: 'Usman',\n                status: true,\n                credit: 0.0,\n                debit: parseFloat(response?.amount_captured),\n                charge_id: user.guest ? response?.id : 'charge',\n                transaction_type: 'PAY',\n                intent_id: user.guest ? 'intent' : user.transaction.intent_id,\n                receipt_number: '123',\n                receipt_url: response?.charges?.data?.[0]?.receipt_url\n                  ? response?.charges?.data?.[0]?.receipt_url\n                  : response?.receipt_url,\n                wallet_fk: localUser?.guest ? null : localUser?.wallet_id\n              };\n              await Actions.PaymentTransaction2(obj);\n              if (reservationType) {\n                await dispatch(\n                  await Actions.updateReservationStatus(reservation_pk, {\n                    reservation_status: RESERVATION_STATUS.Completed\n                  })\n                );\n              }\n              swal(\n                'Transaction Successful',\n                'Please download you receipt and unplug the charger',\n                {\n                  buttons: {\n                    cancel: {\n                      text: 'Download Transaction Receipt',\n                      value: null,\n                      visible: false,\n                      className: '',\n                      closeModal: false\n                    },\n                    confirm: {\n                      text: 'Download Transaction Receipt',\n                      value: true,\n                      visible: true,\n                      className: '',\n                      closeModal: true\n                    }\n                  },\n                  icon: 'success'\n                }\n              )\n                .then((value) => {\n                  if (localUser?.guest) {\n                    handleToggleFeedback();\n                    window.open(\n                      response?.charges?.data?.[0]?.receipt_url\n                        ? response?.charges?.data?.[0]?.receipt_url\n                        : response?.receipt_url,\n                      '_blank' // <- This is what makes it open in a new window.\n                    );\n                  } else {\n                    window.open(\n                      response?.charges?.data?.[0]?.receipt_url\n                        ? response?.charges?.data?.[0]?.receipt_url\n                        : response?.receipt_url,\n                      '_blank' // <- This is what makes it open in a new window.\n                    );\n                  }\n                })\n                .catch((e) => {});\n            } else if (\n              fetchResponse.Error ===\n              'Payment was unsuccessful, please try again...'\n            ) {\n              const user = getLocalStorage('evapUser', true, true);\n              let refundResponse;\n              if (user?.transaction?.charge_id) {\n                refundResponse = await dispatch(\n                  await Actions.paymentRefund(\n                    localStoreUser,\n                    !triggerLocalStorage\n                  )\n                );\n              } else {\n                const cancelObj = {\n                  reason: 'Payment was unsuccessful',\n                  intent_id: user?.transaction?.intent_id\n                };\n                refundResponse = await Actions.paymentIntentCancel(cancelObj);\n              }\n              swal(\n                'Payment was unsuccessful',\n                'Your amount is refunded please try again',\n                {\n                  buttons: {\n                    cancel: {\n                      text: 'Download Transaction Receipt',\n                      value: null,\n                      visible: false,\n                      className: '',\n                      closeModal: false\n                    },\n                    confirm: {\n                      text: 'Go Back',\n                      value: true,\n                      visible: true,\n                      className: '',\n                      closeModal: true\n                    }\n                  },\n                  icon: 'danger'\n                }\n              )\n                .then((value) => {\n                  if (localUser?.guest) {\n                    dispatch(Actions.removeSingleChargeBox());\n                  } else {\n                    history.push('/reservation');\n                  }\n                })\n                .catch((e) => {});\n            } \n          }\n          \n          // }, 5000);\n        }\n        }\n        \n      }\n    }, 5000);\n\n    if(singleBox?.connectorId_fk?.length ==1 && selectedConnector === null){\n      dispatch({\n        type: TYPE.SINGLE_CHARGE_BOX_SELETED_CONNECTOR,\n        payload: singleBox.connectorId_fk[0].connectorId_pk\n      });\n    }\n\n    return () => {\n      clearInterval(handle);\n    };\n  }, [singleBox, pgUser, chargeBoxUser, checkTransactionReqStatus]);\n  useEffect(() => {\n    if(agreed){\n      remoteStartFunc();\n    }\n  }, [agreed])\n  useEffect(()=> {\n    if(singleBox){\n      setConnector_id_by_count(singleBox?.connectorId_fk.map((e) => {\n        return e.connectorId_pk\n      }).indexOf(selectedConnector) +1);\n      console.log(connector_id_by_count);\n    }\n  },[selectedConnector])\n  const _userLocal = getLocalStorage('evapUser', true, true);\n  const [isOpen, setIsOpen] = useState(true);\n  const [registerOpen, setRegisterOpen] = useState(true);\n  const [transactionId, setTransactionId] = useState(null);\n  const [notavailable, setNotavailable] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [form, setForm] = useState({\n    profile: {\n      \"value\": \"profilePM\",\n      \"label\": \"Rate Per Minute\"\n    },\n    hour: 10,\n    min: 60,\n  });\n  const [selected, setSelected] = useState(0);\n  const [feedback, setFeedback] = useState(false);\n\n  const handleModalOpener = () => {\n    setIsOpen(!isOpen);\n  };\n  const HanlderRegisterModal = () => {\n    setRegisterOpen(!registerOpen);\n  };\n  const handlerNotAvailable = () => {\n    setNotavailable(!notavailable);\n    history.push('/');\n  };\n  const toggleSelected = (param) => (e) => {\n    setFeedbackform({ ...feedbackform, satisfaction: param });\n    setSelected(param);\n  };\n\n  const handleToggleFeedback = () => {\n    setFeedback(!feedback);\n  };\n  const openFeedback = () => {\n    setFeedback(true);\n  };\n\n  const [feedbackform, setFeedbackform] = useState({\n    satisfaction: 0,\n    recommend: null,\n    gender: '',\n    age_group: '',\n    feedback_content: '',\n    location: '',\n    user: ''\n  });\n  const handleClose = () => {\n    setWaiverDialogue(false);\n  };\n  const handleCheck = () => {\n    setChecked(true);\n  };\n  const agreeHandle = () => {\n    setAgreed(true);\n    setWaiverDialogue(false);\n  };\n  const handleConnectorRadioChange = (event) => {\n    dispatch({\n      type: TYPE.SINGLE_CHARGE_BOX_SELETED_CONNECTOR,\n      payload: event.target.value\n    });\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    console.log(e);\n    const runAction = async () => {\n      setIsLoading(true);\n      try {\n        await dispatch(\n          await Actions.afterTransactionFeedback({\n            ...feedbackform,\n            age_group: feedbackform.age_group,\n            recommend: feedbackform?.recommend,\n            location: singleBox.chargeboxid,\n            user: chargeBoxUser?.results?.[0]?.user?.idtag\n          })\n        );\n        if (localUser?.guest) {\n          dispatch(Actions.removeSingleChargeBox());\n        } else {\n          history.push('/reservation');\n        }\n        setFeedback(false);\n        Toaster('success', 'Created successfully');\n      } catch (error) {\n        Toaster('error', 'error in creating');\n        setIsLoading(false);\n      }\n    };\n    runAction();\n  };\n  const buffer = [\n    <>\n      <InsertEmoticonIcon />\n      <p>Happy</p>\n    </>,\n    <>\n      <SentimentDissatisfiedIcon />\n      <p>Moderate</p>\n    </>,\n    <>\n      <SentimentVeryDissatisfiedIcon />\n      <p>Unhappy</p>\n    </>\n  ];\n  useEffect(\n    () => () => {\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n  useEffect(() => {\n    if (localUser) {\n      setLocalStoreUser(localUser);\n    }\n  }, [triggerLocalStorage]);\n  if (topLoading) {\n    return (\n      <>\n        <div className=\"d-flex align-items-center flex-column vh-100 justify-content-center text-center py-3\">\n          <div className=\"d-flex align-items-center flex-column px-4\">\n            <ClimbingBoxLoader color={'#3c44b1'} loading={true} />\n          </div>\n          <div className=\"text-muted font-size-xl text-center pt-3\">\n            Please wait while we load the live preview examples\n            <span className=\"font-size-lg d-block text-dark\">\n              This live preview instance can be slower than a real production\n              build!\n            </span>\n          </div>\n        </div>\n      </>\n    );\n  }\n  if (!localStoreUser?.startTransaction && !singleBox && !reservationType) {\n    return (\n      <>\n        <WalkInUser\n          form={form}\n          setForm={setForm}\n          isOpen={isOpen}\n          handleModal={handleModalOpener}\n        />\n        <div className={`${className} app-inner-content-layout`}>\n          <div className=\"app-inner-content-layout--main p-0\">\n            <div className=\"hero-wrapper  rounded-bottom shadow-xxl bg-composed-wrapper bg-second\">\n              <div className=\"flex-grow-1 w-100 d-flex align-items-center vh-100\">\n                <div className=\"bg-composed-wrapper--image opacity-3\" />\n                <div className=\"bg-composed-wrapper--bg bg-deep-sky opacity-4\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n  const latAndLong = async () => {\n    setIsLoading(true);\n    await dispatch(\n      await Actions.getNearByCharge(\n        { ...singleBox },\n        moment().format('YYYY-MM-DD HH:mm:ss'),\n        moment().add(1, 'hours').format('YYYY-MM-DD HH:mm:ss'),\n        form\n      )\n    );\n    setIsLoading(false);\n    history.push('/');\n  };\n  if (\n    (!reservationType && singleBox && singleBox?.is_occupied) ||\n    (!reservationType && singleBox && singleBox?.applicable_pp === null)\n  ) {\n    return (\n      <>\n        <SweatAlert\n          isLoading={isLoading}\n          close={handlerNotAvailable}\n          show={notavailable}\n          sweatSubmit={latAndLong}\n          submitbutton=\"Find Nearby\"\n          cancel=\"Back to Map\"\n          title=\"Sorry! This Charger is not Available at this time\"\n          type=\"info\"\n          message=\"Click below find near by to find alternative charge\"\n        />\n        <div className={`${className} app-inner-content-layout`}>\n          <div className=\"app-inner-content-layout--main bg-white p-0\">\n            <div className=\"hero-wrapper  rounded-bottom shadow-xxl bg-composed-wrapper bg-second\">\n              <div className=\"flex-grow-1 w-100 d-flex align-items-center vh-100\">\n                <div className=\"bg-composed-wrapper--image opacity-3\" />\n                <div className=\"bg-composed-wrapper--bg bg-deep-sky opacity-4\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n  const sweatSubmit = () => {\n    dispatch(Actions.loginModel(true));\n    HanlderRegisterModal();\n  };\n  const remoteStartFunc = async () => {\n    if(selectedConnector === ''){\n      Toaster('error', 'Please Select a connector first');\n      return;\n    }\n    if(agreed === false){\n      Toaster('error', 'Please Agree to the waiver form');\n      return\n    }\n    setConnector_id_by_count(singleBox.connectorId_fk.map((e) => {\n      return e.connectorId_pk\n    }).indexOf(selectedConnector) +1);\n\n    if (reservationType) {\n      let obj;\n\n      if (reservationType === 'profilePKW') {\n        obj = {\n          chargebox_id: singleBox.chargeboxid,\n          user_id: localUser.guest\n            ? chargeBoxUser?.results?.[0]?.idtag_fk\n            : pgUser?.idtag_fk,\n          est_kw: Number(est_KW),\n          p_transaction_id: p_transaction_id,\n          reservation_id: reservation_pk,\n          connector_id: connector_id_by_count\n        };\n      } else {\n        obj = {\n          chargebox_id: singleBox.chargeboxid,\n          user_id: localUser.guest\n            ? chargeBoxUser?.results?.[0]?.idtag_fk\n            : pgUser?.idtag_fk,\n          est_mins: moment(`${reserveDate} ${reserveExpiryTime}`).diff(\n            moment(`${reserveDate} ${reserveStartTime}`),\n            'minutes'\n          ),\n          p_transaction_id: p_transaction_id,\n          reservation_id: reservation_pk,\n          connector_id: connector_id_by_count\n        };\n      }\n      await dispatch(\n        Actions.remoteStartTransaction({\n          ...obj\n        })\n      );\n      return;\n    } else if (singleBox?.isPOS) {\n      let chargeObj = {};\n      if (localUser?.chargingInfo?.profile?.value == 'profilePM') {\n        chargeObj = {\n          est_mins: Number(localUser?.chargingInfo?.min)\n        };\n      } else {\n        chargeObj = {\n          est_kw: Number(singleBox.estimated_vals.total_killowatt)\n        };\n      }\n      const obj = {\n        chargebox_id: singleBox.chargeboxid,\n        user_id: localUser?.guest\n          ? chargeBoxUser?.results?.[0]?.idtag_fk\n          : pgUser?.idtag_fk,\n        connector_id: connector_id_by_count,\n        ...chargeObj\n      };\n      await dispatch(\n        Actions.remoteStartTransaction({\n          ...obj\n        })\n      );\n      return;\n    }\n    if (localStoreUser?.enableTryAgain) {\n      const obj = {\n        chargebox_id: singleBox.chargeboxid,\n        user_id: localUser?.guest\n          ? chargeBoxUser?.results?.[0]?.idtag_fk\n          : pgUser?.idtag_fk,\n          connector_id: connector_id_by_count,\n      };\n      \n      console.log(obj);\n\n      if(connector_id_by_count!==0 && connector_id_by_count !=undefined){\n        dispatch(\n          Actions.checkTransactionStatus(\n            { ...obj },\n            !triggerLocalStorage,\n            singleBox.chargeboxid\n          )\n        );\n      }\n      return;\n    }\n    dispatch(setHeaderDrawerToggle(!headerDrawerToggle));\n  };\n  const remoteStopTransaction = async () => {\n    if (localStoreUser) {\n      const obj = {\n        chargebox_id: singleBox.chargeboxid,\n        user_id: localUser?.guest\n          ? chargeBoxUser?.results?.[0]?.idtag_fk\n          : pgUser?.idtag_fk,\n        connector_id: connector_id_by_count\n      };\n      const response = await dispatch(\n        await Actions.remoteStopTransaction(\n          {\n            ...obj\n          },\n          singleBox.chargeboxid\n        )\n      );\n      // setTimeout(async () => {\n        \n      const res = await dispatch(\n        await Actions.remoteFetchTransaction(\n          { chargebox_id: singleBox.chargeboxid, connector_id: connector_id_by_count },\n          !triggerLocalStorage\n        )\n      );\n      dispatch(Actions.LocalStorageTrigger(!triggerLocalStorage));\n      if (res?.Success) {\n        if (\n          !checkTransactionReqStatus ||\n          checkTransactionReqStatus !== res?.Success\n        ) {\n          dispatch({ type: TYPE.CHECK_STATUS, payload: res?.Success });\n          Toaster('success', res?.Success);\n        }\n      } else {\n        if (\n          !checkTransactionReqStatus ||\n          checkTransactionReqStatus !== res?.Error\n        ) {\n          dispatch({ type: TYPE.CHECK_STATUS, payload: res?.Error });\n          Toaster('error', res?.Error);\n        }\n      }\n      if (res?.Success === 'Transaction data') {\n        const user = getLocalStorage('evapUser', true, true);\n        if (singleBox?.isPOS) {\n          swal('Transaction Successful', 'Please Click Confrim Button', {\n            buttons: {\n              cancel: {\n                text: 'Download Transaction Receipt',\n                value: null,\n                visible: false,\n                className: '',\n                closeModal: false\n              },\n              confirm: {\n                text: 'Confrim',\n                value: true,\n                visible: true,\n                className: '',\n                closeModal: true\n              }\n            },\n            icon: 'success'\n          })\n            .then((value) => {\n              setFeedback(true);\n            })\n            .catch((e) => {});\n          return;\n        }\n        let response;\n        if (user?.transaction?.charge_id) {\n          response = await API.post(`/payments/customer-charge/`, {\n            charge_id: user?.transaction?.charge_id,\n            amount:\n              res?.data?.charge_amount > 200\n                ? parseInt(res?.data?.charge_amount)\n                : 200,\n            email: user?.email\n          });\n        } else {\n          response = await API.post(`/payments/payment-capture/`, {\n            intent_id: user.transaction.intent_id,\n            amount_to_capture:\n              res?.data?.charge_amount > 200\n                ? parseInt(res?.data?.charge_amount)\n                : 200\n          });\n        }\n        const obj = {\n          version: '1',\n          created_date: moment().toISOString(),\n          updated_date: moment().toISOString(),\n          created_by: 'Usman',\n          lastmodified_by: 'Usman',\n          status: true,\n          credit: 0.0,\n          debit: parseFloat(response?.amount_captured),\n          charge_id: user.guest ? response?.id : 'charge',\n          transaction_type: 'PAY',\n          intent_id: user.guest ? 'intent' : user.transaction.intent_id,\n          receipt_number: '123',\n          receipt_url: response?.charges?.data?.[0]?.receipt_url\n            ? response?.charges?.data?.[0]?.receipt_url\n            : response?.receipt_url,\n          wallet_fk: localUser?.guest ? null : localUser?.wallet_id\n        };\n        await Actions.PaymentTransaction2(obj);\n        if (reservationType) {\n          await dispatch(\n            await Actions.updateReservationStatus(reservation_pk, {\n              reservation_status: RESERVATION_STATUS.Completed\n            })\n          );\n        }\n        swal(\n          'Transaction Successful',\n          'Please download you receipt and unplug the charger',\n          {\n            buttons: {\n              cancel: {\n                text: 'Download Transaction Receipt',\n                value: null,\n                visible: false,\n                className: '',\n                closeModal: false\n              },\n              confirm: {\n                text: 'Download Transaction Receipt',\n                value: true,\n                visible: true,\n                className: '',\n                closeModal: true\n              }\n            },\n            icon: 'success'\n          }\n        )\n          .then((value) => {\n            if (localUser?.guest) {\n              window.open(\n                response?.charges?.data?.[0]?.receipt_url\n                  ? response?.charges?.data?.[0]?.receipt_url\n                  : response?.receipt_url,\n                '_blank' // <- This is what makes it open in a new window.\n              );\n            } else {\n              window.open(\n                response?.charges?.data?.[0]?.receipt_url\n                  ? response?.charges?.data?.[0]?.receipt_url\n                  : response?.receipt_url,\n                '_blank' // <- This is what makes it open in a new window.\n              );\n            }\n            setFeedback(true);\n          })\n          .catch((e) => {});\n      } else if (\n        res?.Error === 'Payment was unsuccessful, please try again...'\n      ) {\n        const user = getLocalStorage('evapUser', true, true);\n        let refundResponse;\n        if (user?.transaction?.charge_id) {\n          refundResponse = await dispatch(\n            await Actions.paymentRefund(localStoreUser, !triggerLocalStorage)\n          );\n        } else {\n          refundResponse = await dispatch(\n            await Actions.paymentRefund1(\n              {\n                amount: credit,\n                intent_id: intent_id\n              },\n              !triggerLocalStorage\n            )\n          );\n        }\n        swal(\n          'Transaction Successful',\n          'Please download you receipt and unplug the charger',\n          {\n            buttons: {\n              cancel: {\n                text: 'Download Transaction Receipt',\n                value: null,\n                visible: false,\n                className: '',\n                closeModal: false\n              },\n              confirm: {\n                text: 'Download Transaction Receipt',\n                value: true,\n                visible: true,\n                className: '',\n                closeModal: true\n              }\n            },\n            icon: 'success'\n          }\n        )\n          .then((value) => {\n            handleToggleFeedback();\n            if (localUser?.guest) {\n              window.open(\n                refundResponse?.receipt_url,\n                '_blank' // <- This is what makes it open in a new window.\n              );\n            } else {\n              window.open(\n                refundResponse?.receipt_url,\n                '_blank' // <- This is what makes it open in a new window.\n              );\n            }\n          })\n          .catch((e) => {});\n      }\n      // }, 5000);\n    }\n  };\n\n  return (\n    <>\n      {!reservationType && !pgUser && (\n        <SweatAlert\n          close={HanlderRegisterModal}\n          show={registerOpen}\n          sweatSubmit={sweatSubmit}\n          submitbutton=\"Register\"\n          cancel=\"Not Interested\"\n          title=\"Checking First Time?\"\n          type=\"info\"\n          message=\"You can signup here to avail more benifits\"\n        />\n      )}\n\n      <DisputeModal isOpen={open} Toggle={onToggle} />\n      <div className={`${className} app-inner-content-layout`}>\n        <div className=\"app-inner-content-layout--main p-0\">\n          <div className=\"hero-wrapper  rounded-bottom shadow-xxl bg-composed-wrapper bg-second\">\n            <div className=\"flex-grow-1 w-100 d-flex align-items-center\">\n              <div className=\"bg-composed-wrapper--image opacity-3\" />\n              <div className=\"bg-composed-wrapper--bg bg-deep-sky opacity-4\" />\n              <div className=\"bg-composed-wrapper--content \">\n                <Container className=\"pt-4\">\n                  <div className=\"d-block d-md-flex justify-content-center align-items-start\">\n                    <div className=\"d-flex text-white flex-column pl-md-2\">\n                      <div className=\"d-block d-md-flex align-items-center flex-column\">\n                        <div >\n                          <div className=\"d-flex flex-column  justify-content-center\">\n                            <Text style={{textAlign: 'center'}} className=\"font-size-xxl\">\n                              Chargebox\n                            </Text>\n                            <Text style={{textAlign: 'center'}} className=\"font-size-xxl font-weight-bold mt-0 mb-4\">\n                              {params?.id.replace(/_/g, ' ').toUpperCase()}\n                              {\"\\n\"}\n                            </Text>\n                            <Text style={{textAlign: 'center'}} >\n                               {_userLocal?.startTransaction ? \n                              'Charging' : 'Click here to start Charging'}\n                            </Text>\n\n                          </div>\n                        </div>\n                        <div className=\"btn-grp-div\" style={{textAlign: 'center'}}>\n                          <Button\n                            onClick={() => {\n                              _userLocal?.startTransaction ? \n                              remoteStopTransaction()\n                              :\n                              (localStoreUser?.enableTryAgain ? remoteStartFunc() :  (agreed ? remoteStartFunc(): setWaiverDialogue(true)) )\n                            }}\n                            size=\"sm\"\n                            color={_userLocal?.startTransaction ? 'danger' : 'success'}\n                            className=\"btn-tag start-btn shadow-none rounded-lg text-uppercase line-height-1 font-weight-bold font-size-xs px-3 w-auto py-0 d-40 mt-2\"\n                            // disabled={\n                            //   !localStoreUser?.enableTryAgain &&\n                            //   localStoreUser?.startTransaction\n                            // }\n                            >\n                            {_userLocal?.startTransaction ? \n                              'Stop' \n                              :\n                              (localStoreUser?.enableTryAgain ? 'Try Again' : 'Start')}\n                          </Button>\n\n                          {/* <Button\n                            onClick={remoteStopTransaction}\n                            size=\"sm\"\n                            color=\"danger\"\n                            className=\"btn-tag  shadow-none rounded-lg text-uppercase line-height-1 font-weight-bold font-size-xs px-3 w-auto py-0 d-40\">\n                            Stop\n                          </Button> */}\n                          {localStoreUser?.enableTryAgain && (\n                            <Button\n                              onClick={async () => {\n                                if (localStoreUser?.guest) {\n                                  await dispatch(\n                                    await Actions.paymentRefund(\n                                      localStoreUser,\n                                      !triggerLocalStorage\n                                    )\n                                  );\n                                  swal(\n                                    'Refund Successful',\n                                    'You amount has been refunded Please verify if any query contact to our support'\n                                  );\n                                } else {\n                                  await dispatch(\n                                    await Actions.paymentRefund1(\n                                      {\n                                        amount: credit,\n                                        intent_id: intent_id\n                                      },\n                                      !triggerLocalStorage\n                                    )\n                                  );\n                                  swal(\n                                    'Refund Successful',\n                                    'You amount has been refunded Please verify if any query contact to our support'\n                                  );\n                                }\n                              }}\n                              size=\"sm\"\n                              color=\"success\"\n                              className=\"btn-tag  shadow-none rounded-lg text-uppercase line-height-1 font-weight-bold font-size-xs px-3 w-auto py-0 d-40\">\n                              Refund\n                            </Button>\n                          )}\n                        </div>\n                        <div>\n                          <Row className=\"ml-4 mr-4 mt-2\">\n                            <Col xs=\"2\"><PinDropIcon fontSize='medium'/></Col>\n                            <Col xs=\"10\" className=\"font-size-md\">{singleBox.city+', '+singleBox.endpoint_address}</Col>\n                          </Row>\n                        </div>\n                      </div>\n                      <div className=\"font-size-lg mt-3\">\n                        {/* <div className=\"card-div my-3 mx-4\">\n                          <Card className=\"card-box mb-5 p-4\">\n                            <TextColor>\n                              <div className=\"p-0\">\n                                <div className=\"container-fluid\">\n                                  <div className=\"row text-center\">\n                                    <div className=\"col-3 p-0\">\n                                      <FontAwesomeIcon\n                                        className=\"25\"\n                                        icon={['fas', 'star']}\n                                      />\n                                      <Text className=\"text2\">Bookmark</Text>\n                                    </div>\n\n                                    <div className=\"col-3 p-0\">\n                                      <FontAwesomeIcon\n                                        icon={['fas', 'image']}\n                                      />\n                                      <Text className=\"text2\">Add Photo</Text>\n                                    </div>\n\n                                    <div className=\"col-3 p-0\">\n                                      <FontAwesomeIcon\n                                        icon={['fas', 'directions']}\n                                      />\n                                      <Text className=\"text2\">Directions</Text>\n                                    </div>\n\n                                    <div className=\"col-3 p-0\">\n                                      <FontAwesomeIcon icon={['fas', 'edit']} />\n                                      <Text className=\"text2\">Edit</Text>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div className=\"container-fluid\">\n                                <div className=\"row align-items-center py-2\">\n                                  <div className=\"col-2 p-0 text-center\">\n                                    <FontAwesomeIcon\n                                      icon={['fas', 'map-marker-alt']}\n                                    />\n                                  </div>\n                                  <div className=\"col-10 p-0\">\n                                    <CardParagraph>\n                                      {`${singleBox?.house_no} \n                                ${singleBox?.street} \n                                ${singleBox?.zip_code} ,\n                                ${singleBox?.city}`}\n                                    </CardParagraph>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <div className=\"container-fluid\">\n                                <div className=\"row align-items-center py-2\">\n                                  <div className=\"col-2 p-0 text-center\">\n                                    <FontAwesomeIcon icon={['fas', 'star']} />\n                                  </div>\n                                  <div className=\"col-10 p-0\">\n                                    <CardParagraph>\n                                      {singleBox?.facilities}\n                                    </CardParagraph>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"container-fluid\">\n                                <div className=\"row align-items-center py-2\">\n                                  <div className=\"col-2 p-0 text-center\">\n                                    <FontAwesomeIcon icon={['fas', 'info']} />\n                                  </div>\n                                  <div className=\"col-10 p-0\">\n                                    <CardParagraph>\n                                      {`${singleBox?.connectorId_fk?.length} x ${singleBox?.capacity}KW`}\n                                    </CardParagraph>\n                                  </div>\n                                </div>\n                              </div>\n                            </TextColor>\n                          </Card>\n                        </div> */}\n\n                        <div className=\"card-div my-3 mx-4\">\n                          {mainLoading ? (\n                            <SkeletonTheme\n                              className=\"ml-2\"\n                              color=\"#2c3658\"\n                              highlightColor=\"#253053\">\n                              <Skeleton width={270} height={160} />\n                            </SkeletonTheme>\n                          ) : (\n                            <Card className=\"card-box mb-5 p-4\">\n                              <TextColor>\n                                <H5>\n                                  {`(${singleBox?.connectorId_fk?.length} Connectors)`}\n                                </H5>\n                                <Container fluid>\n                                  <Row className=\"align-items-center\">\n                                    {/* {singleBox?.connectorId_fk?.length ==1 && selectedConnector === ''? setSelectedConnector(singleBox.connectorId_fk[0].connectorId_pk): ''} */}\n                                    <RadioGroup aria-label=\"quiz\" style={{flexDirection: 'row'}} name=\"quiz\" value={selectedConnector} onChange={handleConnectorRadioChange}>\n                                      {singleBox?.connectorId_fk.map((c,index) => (\n                                        <>\n                                          <Col\n                                            xl={2}\n                                            lg={2}\n                                            md={3}\n                                            xs={3}\n                                            sm={3}\n                                            className=\"text-center rounded-sm\">\n                                            <img\n                                              style={{\n                                                width: '100%'\n                                              }}\n                                              className=\"connector_icon\"\n                                              src={c.connectorImage}\n                                              alt=\"..\"\n                                            />\n                                          </Col>\n                                          <Col \n                                            style={{flexDirection: 'row'}}\n                                            className=\"text-align-center d-flex justify-content-between\"\n                                            xl={10}\n                                            lg={10}\n                                            md={9}\n                                            sm={9}\n                                            xs={9}>\n                                            <div>\n                                              <Heading>\n                                                {c?.connectorTypeName}\n                                              </Heading>\n                                              <CardParagraph  >\n                                                <div> \n                                                  {\n                                                    chargeBoxConnector?.results.filter(\n                                                      (cId) =>\n                                                        cId.connectorId_pk ===\n                                                        c.connectorId_pk\n                                                    )?.length\n                                                  }{' '}\n                                                  plug  1 station\n                                                  \n                                                </div>\n                                              </CardParagraph>\n                                            </div>\n                                            <div>\n                                              <FormControlLabel value={c.connectorId_pk} control={<Radio color=\"primary\"/>}  />\n                                            </div>\n                                          </Col>\n                                        </>\n                                      ))}\n                                    </RadioGroup>\n                                  </Row>\n                                </Container>\n                              </TextColor>\n                            </Card>\n                          )}\n                        </div>\n                        {singleBox?.isPOS ? <div className=\"card-div my-3 mx-4\">\n                          {mainLoading ? (\n                            <SkeletonTheme\n                              className=\"ml-2\"\n                              color=\"#2c3658\"\n                              highlightColor=\"#253053\">\n                              <Skeleton width={270} height={160} />\n                            </SkeletonTheme>\n                          ) : (\n                            <Card className=\"card-box mb-5 p-4\">\n                              <TextColor>\n                                <H5>Applied Tariff</H5>\n\n                                <div className=\"container-fluid\">\n                                  <div className=\"row  align-items-center py-2\">\n                                    <>\n                                      <div className=\"col-2 p-0 text-center\">\n                                        <FontAwesomeIcon\n                                          icon={['fas', 'dollar-sign']}\n                                        />\n                                      </div>\n                                      <div className=\"col-10 p-0\">\n                                        <Heading>\n                                          {\n                                            singleBox?.applicable_pp\n                                              ?.profilename\n                                          }\n                                        </Heading>\n                                        <CardParagraph>\n                                          {`${\n                                            singleBox?.applicable_pp?.rates?.[0]\n                                              ?.profilepriceunit\n                                          }RM\n                                    (${\n                                      singleBox?.applicable_pp?.rates?.[0]\n                                        ?.profilepricetype === 'profilePM'\n                                        ? 'Per Minute'\n                                        : 'Per Kilo Watt'\n                                    })`}\n                                        </CardParagraph>\n                                      </div>\n                                    </>\n                                  </div>\n                                </div>\n                              </TextColor>\n                            </Card>\n                          )}\n                        </div> : '' }\n                        {/* <div className=\"card-div my-3 mx-4\">\n                          {mainLoading ? (\n                            <SkeletonTheme\n                              className=\"ml-2\"\n                              color=\"#2c3658\"\n                              highlightColor=\"#253053\">\n                              <Skeleton width={270} height={160} />\n                            </SkeletonTheme>\n                          ) : (\n                            <Card className=\"card-box mb-5 p-4\">\n                              <TextColor>\n                                <H5>Applied Tariff</H5>\n\n                                <div className=\"container-fluid\">\n                                  <div className=\"row  align-items-center py-2\">\n                                    <>\n                                      <div className=\"col-2 p-0 text-center\">\n                                        <FontAwesomeIcon\n                                          icon={['fas', 'dollar-sign']}\n                                        />\n                                      </div>\n                                      <div className=\"col-10 p-0\">\n                                        <Heading>\n                                          {\n                                            singleBox?.applicable_pp\n                                              ?.profilename\n                                          }\n                                        </Heading>\n                                        <CardParagraph>\n                                          {`${\n                                            singleBox?.applicable_pp?.rates?.[0]\n                                              ?.profilepriceunit\n                                          }RM\n                                    (${\n                                      singleBox?.applicable_pp?.rates?.[0]\n                                        ?.profilepricetype === 'profilePM'\n                                        ? 'Per Minute'\n                                        : 'Per Kilo Watt'\n                                    })`}\n                                        </CardParagraph>\n                                      </div>\n                                    </>\n                                  </div>\n                                </div>\n                              </TextColor>\n                            </Card>\n                          )}\n                        </div> */}\n                        {/* <div className=\"card-div my-3 mx-4\">\n                          <Card className=\"card-box mb-5 p-4 text-center\">\n                            <div className=\"d-flex align-items-center mx-auto\">\n                              <Badge\n                                color={statusColor}\n                                className=\"badge-circle mx-2 pulse-animation\">\n                                total\n                              </Badge>\n                              <span className=\"d-20 w-auto text-black-50 font-size-sm\"></span>\n                            </div>\n                            <div className=\"py-4 my-2\">\n                              <Progress\n                                value={100}\n                                strokeWidth={30}\n                                className=\"progress-animated-alt progress-lg\"\n                                color=\"success\"></Progress>\n                            </div>\n                          </Card>\n                        </div> */}\n                      </div>\n                    </div>\n                  </div>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Dialog\n        open={feedback}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className=\"walkinUserDialog\"\n        onClose={handleToggleFeedback}>\n        <DialogTitle id=\"alert-dialog-title\">{'Feedback'}</DialogTitle>\n        <DialogContent\n          style={{\n            borderTop: '1px solid rgba(0, 0, 0, 0.12)',\n            borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n          }}>\n          <DialogContentText id=\"alert-dialog-description\">\n            <FormControl component=\"fieldset\">\n              <div className=\"rate-select\">\n                <input name=\"satisfaction\" type=\"hidden\"></input>\n                <Row>\n                  {/* <Typography>Rate Satisfaction</Typography> */}\n\n                  {buffer.map((obj, index) => {\n                    return (\n                      <Col\n                        onClick={toggleSelected(index)}\n                        className={selected == index ? 'selected' : ''}>\n                        {obj}\n                      </Col>\n                    );\n                  })}\n\n                  {/* <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography component=\"legend\">How satisfied are you?</Typography>\n              <Rating name=\"satisfaction_rate\" value={ratings} />\n              </Box> */}\n                </Row>\n              </div>\n              <div className=\"justify-content-center mt-2\">\n                <FormLabel component=\"legend\">\n                  Likelihood to Recommend\n                </FormLabel>\n                <RadioGroup\n                  row\n                  aria-label=\"position\"\n                  name=\"recommend\"\n                  defaultValue=\"\"\n                  onChange={(e) => {\n                    setFeedbackform({\n                      ...feedbackform,\n                      recommend: e.target.value === 'yes' ? true : false\n                    });\n                  }}>\n                  <FormControlLabel\n                    value={'yes'}\n                    control={<Radio color=\"primary\" />}\n                    label=\"Yes\"\n                    // labelPlacement=\"top\"\n                  />\n                  <FormControlLabel\n                    value={'no'}\n                    control={<Radio color=\"primary\" />}\n                    label=\"No\"\n                    // labelPlacement=\"top\"\n                  />\n                </RadioGroup>\n              </div>\n\n              <Row className=\"justify-content-center mt-2\">\n                <Col>\n                  <FormLabel component=\"legend\">Gender</FormLabel>\n                  <RadioGroup\n                    row\n                    aria-label=\"gender\"\n                    name=\"gender1\"\n                    onChange={(e) => {\n                      setFeedbackform({\n                        ...feedbackform,\n                        gender: e.target.value\n                      });\n                    }}>\n                    <FormControlLabel\n                      value=\"male\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"Male\"\n                    />\n                    <FormControlLabel\n                      value=\"female\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"Female\"\n                    />\n                    <FormControlLabel\n                      value=\"other\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"Other\"\n                    />\n                  </RadioGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Typography id=\"discrete-slider-always\" gutterBottom>\n                    Age\n                  </Typography>\n                  <Slider\n                    defaultValue={35}\n                    name=\"age\"\n                    onChange={(e, v) => {\n                      setFeedbackform({ ...feedbackform, age_group: v });\n                    }}\n                    // valueLabelFormat={valueLabelFormat}\n                    // getAriaValueText={valuetext}\n                    aria-labelledby=\"discrete-slider-always\"\n                    valueLabelDisplay=\"on\"\n                    step={5}\n                    marks\n                    min={20}\n                    max={85}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <TextareaAutosize\n                    style={{ border: '1px solid', width: 'inherit' }}\n                    content\n                    aria-label=\"minimum height\"\n                    minRows={3}\n                    maxRows={6}\n                    placeholder=\"Leave your comments\"\n                    onChange={(e) => {\n                      setFeedbackform({\n                        ...feedbackform,\n                        feedback_content: e.target.value\n                      });\n                    }}\n                  />\n                </Col>\n              </Row>\n            </FormControl>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          {/* <Button  color=\"primary\" autoFocus>\n          Submit\n          </Button> */}\n          <LaddaButton\n            color=\"primary\"\n            loading={isLoading}\n            data-size={XL}\n            onClick={onSubmitHandler}\n            className=\"btn btn-primary font-weight-bold w-50 my-2\">\n            Submit\n          </LaddaButton>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        open={waiverDialogue}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">\n          {'BIJAU program policy'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            I hereby agree to be part of BIJAU program by Boustead Holdings\n            Berhad (“BHB”) to experience by testing the Electric Vehicle\n            Chargers provided to me, at no cost. I agree to indemnify BHB, BHB\n            group of companies, its’ subsidiaries and affiliates, partners\n            service providers, employees, directors and agents in full against\n            all claims, damages, losses, liabilities, expenses, demands,\n            actions, penalties and costs, arising out of or in connection with\n            my access or use of the BIJAU Electric Vehicle Charging services, my\n            negligence, or any omission, act or breach of this terms of use by\n            myself or any other persons using my vehicle (whether or not\n            expressly authorised by me).\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions style={{ justifyContent: 'space-around' }}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                onChange={handleCheck}\n                checked={checked}\n                name=\"checkedB\"\n                color=\"primary\"\n                className=\"mr-2\"\n              />\n            }\n            label=\"Yes, I understand\"\n          />\n          <Button\n            disabled={checked === false}\n            onClick={agreeHandle}\n            color=\"primary\"\n            autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nexport default styled(LivePreviewExample)`\n  @media screen and (max-width: 758px) {\n    .hero-wrapper {\n      margin: 0px !important;\n    }\n    .card-div {\n      margin: 0px !important;\n    }\n    .container {\n      padding: 10px !important;\n    }\n    .dropzone {\n      width: 140px;\n    }\n    .btngrp {\n      margin: 0px !important;\n    }\n    .btn-grp-div {\n      text-align: center;\n    }\n    .btn-tag {\n      margin-left: 4%;\n    }\n    .text-tag {\n      margin-left: 8%;\n    }\n    .text2 {\n      font-size: 12px;\n      font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\n    }\n  }\n  .btn-tag {\n    margin-left: 6px;\n  }\n  .btn-grp-div {\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport ChargeBoxComponent from 'components/ChargeBox';\n\nexport default function ChargeBox() {\n  return (\n    <>\n      <ChargeBoxComponent />\n    </>\n  );\n}\n"],"sourceRoot":""}